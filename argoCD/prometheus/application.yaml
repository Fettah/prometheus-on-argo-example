apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: '3'
  labels:
    release: kube-prometheus-stack
spec:
  destination:
    name: in-cluster
    namespace: argocd
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 45.6.0
    helm:
      skipCrds: true
      values: |-
        prometheus:
          prometheusSpec:
            serviceMonitorSelector:
              matchLabels:
                prometheus: argo-cd-grafana
            additionalScrapeConfigs: |
              - job_name: serviceMonitor/staging/myapp/0
                honor_timestamps: true
                scrape_interval: 15s
                scrape_timeout: 10s
                metrics_path: /metrics
                scheme: http
                follow_redirects: true
                enable_http2: true
                relabel_configs:
                  - source_labels: [job]
                    separator: ;
                    regex: (.*)
                    target_label: __tmp_prometheus_job_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_service_label_app, __meta_kubernetes_service_labelpresent_app]
                    separator: ;
                    regex: (myapp-monitoring);true
                    replacement: $1
                    action: keep
                  - source_labels: [__meta_kubernetes_endpoint_port_name]
                    separator: ;
                    regex: http-metrics
                    replacement: $1
                    action: keep
                  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
                    separator: ;
                    regex: Node;(.*)
                    target_label: node
                    replacement: ${1}
                    action: replace
                  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
                    separator: ;
                    regex: Pod;(.*)
                    target_label: pod
                    replacement: ${1}
                    action: replace
                  - source_labels: [__meta_kubernetes_namespace]
                    separator: ;
                    regex: (.*)
                    target_label: namespace
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_service_name]
                    separator: ;
                    regex: (.*)
                    target_label: service
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_name]
                    separator: ;
                    regex: (.*)
                    target_label: pod
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_container_name]
                    separator: ;
                    regex: (.*)
                    target_label: container
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_phase]
                    separator: ;
                    regex: (Failed|Succeeded)
                    replacement: $1
                    action: drop
                  - source_labels: [__meta_kubernetes_service_name]
                    separator: ;
                    regex: (.*)
                    target_label: job
                    replacement: ${1}
                    action: replace
                  - separator: ;
                    regex: (.*)
                    target_label: endpoint
                    replacement: http-metrics
                    action: replace
                  - source_labels: [__address__]
                    separator: ;
                    regex: (.*)
                    modulus: 1
                    target_label: __tmp_hash
                    replacement: $1
                    action: hashmod
                  - source_labels: [__tmp_hash]
                    separator: ;
                    regex: "0"
                    replacement: $1
                    action: keep
              - job_name: 'argocd'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['argocd-application-controller-metrics.argocd.svc.cluster.local:8082', 'argocd-redis-metrics.argocd.svc.cluster.local:9121']
              - job_name: 'alertManager'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['alertmanager-operated.argocd.svc.cluster.local:9093']
        alertmanager:
          enabled: true
        nodeExporter:
          enabled: false
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
