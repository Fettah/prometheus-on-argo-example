apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: '3'
  labels:
    release: kube-prometheus-stack
spec:
  destination:
    name: in-cluster
    namespace: argocd
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 45.6.0
    helm:
      skipCrds: true
      values: |-
        additionalPrometheusRules:
        - name: "kube-prometheus-stack-highcpuusage"
          groups:
            - name: "cpu-alerts"
              rules:
                - alert: HighCPUUsage
                  expr: 100 - avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) by (instance) > 40
                  for: 30s
                  labels:
                    severity: critical
                  annotations:
                    summary: "CPU usage is above 40% for 30 seconds"
                    description: "CPU usage for instance {{ $labels.instance }} has exceeded 40% for more than 30 seconds."
        prometheus:
          prometheusSpec:
            serviceMonitorSelector:
              matchLabels:
                prometheus: argo-cd-grafana
            additionalScrapeConfigs: |
              - job_name: 'argocd'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['argocd-application-controller-metrics.argocd.svc.cluster.local:8082', 'argocd-redis-metrics.argocd.svc.cluster.local:9121']
              - job_name: 'alertManager'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['alertmanager-operated.argocd.svc.cluster.local:9093']
              - job_name: prometheus
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['localhost:9090']
              - job_name: 'kubelet'
                scheme: https
                metrics_path: /metrics/cadvisor
                tls_config:
                  insecure_skip_verify: true
                bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                kubernetes_sd_configs:
                  - role: node
        alertmanager:
          enabled: true
        nodeExporter:
          enabled: true
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
